name: Ubuntu (DEB + AppImage)

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ${{ matrix.env.os }}
    env:
      VERSION: 1.4.3
    strategy:
      matrix:
        env:
          - name: Linux DEB package
            os: ubuntu-20.04
            qtplatform: linux
          - name: Linux AppImage
            os: ubuntu-18.04
            qtplatform: linux
            qtversion: 5.15.2

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checking out the code
        uses: actions/checkout@v2

      - name: Install dependencies
        id: vars
        run: |
          echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
          sudo apt-get -qq update
          sudo apt-get -qq install libgl1-mesa-dev libxkbcommon-x11-0 libc6-i386 build-essential libgl1-mesa-dev mesa-common-dev libgles2-mesa-dev libxkbcommon-x11-0 libxcb-icccm4-dev libxcb-xinerama0 libxcb-image0 libxcb-keysyms1 libxcb-* fakeroot
          sudo apt-get -qq remove gcc g++
          sudo apt-get install -y -qq gcc-9 g++-9
          sudo ln -s /usr/bin/g++-9 /usr/bin/g++
          sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc

      - name: Install Qt for DEB package
        if: matrix.env.name == 'Linux DEB package'
        run: |
          sudo apt-get -qq install qt5-qmake qt5-default qtwebengine5-dev

      - name: Install Qt for AppImage
        if: matrix.env.name == 'Linux AppImage'
        uses: jurplel/install-qt-action@v2.13.2
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        timeout-minutes: 10
        with:
          version: ${{ matrix.env.qtversion }}
          target: desktop
          host: ${{ matrix.env.qtplatform }}
          install-deps: true
          modules: 'qtwebengine'

      - name: Build GitQlient AppImage
        if: matrix.env.name == 'Linux AppImage'
        run: |
          qmake -v
          mkdir build
          qmake GitQlient.pro PREFIX=$(pwd)/AppImage/gitqlient/usr VERSION=${{env.VERSION}}
          make -j 4
          make install
          wget -q -O linuxdeployqt https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt
          ./linuxdeployqt AppImage/gitqlient/usr/share/applications/*.desktop -appimage -no-translations -bundle-non-qt-libs -extra-plugins=iconengines,imageformats
          chmod +x GitQlient-*
          cp GitQlient-* ../

      - name: Build GitQlient DEB package
        if: matrix.env.name == 'Linux DEB package'
        run: |
          mkdir build
          qmake GitQlient.pro PREFIX=$(pwd)/AppImage/gitqlient/usr VERSION=${{env.VERSION}}
          make -j 4
          make install
          echo "Version: ${{env.VERSION}}" >> deb_pkg/DEBIAN/control
          echo "Standards-Version: ${{env.VERSION}}" >> deb_pkg/DEBIAN/control
          mkdir -p deb_pkg/usr/bin
          cp gitqlient deb_pkg/usr/bin/
          mv deb_pkg gitqlient_${{env.VERSION}}_amd64
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/scalable/apps
          cp ./src/resources/icons/GitQlientLogo.svg gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/scalable/apps/gitqlient.svg
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/16x16/apps/
          cp ./src/resources/icons/GitQlientLogo16.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/16x16/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/24x24/apps/
          cp ./src/resources/icons/GitQlientLogo24.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/24x24/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/32x32/apps/
          cp ./src/resources/icons/GitQlientLogo32.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/32x32/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/48x48/apps/
          cp ./src/resources/icons/GitQlientLogo48.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/48x48/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/64x64/apps/
          cp ./src/resources/icons/GitQlientLogo64.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/64x64/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/96x96/apps/
          cp ./src/resources/icons/GitQlientLogo96.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/96x96/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/128x128/apps/
          cp ./src/resources/icons/GitQlientLogo128.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/128x128/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/256x256/apps/
          cp ./src/resources/icons/GitQlientLogo256.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/256x256/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/512x512/apps/
          cp ./src/resources/icons/GitQlientLogo512.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/512x512/apps/gitqlient.png
          fakeroot dpkg-deb -v --build gitqlient_${{env.VERSION}}_amd64
          cp *.deb ../

      - name: Uploading GitQlient AppImage
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/') && matrix.env.name == 'Linux AppImage'
        with:
          files: GitQlient-*

      - name: Uploading GitQlient DEB package
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/') && matrix.env.name == 'Linux DEB package'
        with:
          files: gitqlient*.deb

      - name: Prune previous runs
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const days_to_expiration = 30;
            const ms_in_day = 86400000;
            const now = Date.now();
            const pages = 5;

            // we don't want to prune old runs from test.yml
            // because we track the duration of runs over time

            const workflows = [
              'ubuntu.yml'
            ]

            let runs_to_delete = [];

            for (const workflow of workflows) {
              for (let page = 0; page < pages; page += 1) {
                let response = await github.actions.listWorkflowRuns({
                  owner: context.repo.owner,
                  page: page,
                  per_page: 100,
                  repo: context.repo.repo,
                  workflow_id: workflow
                });

                if (response.data.workflow_runs.length > 0) {
                  for (const run of response.data.workflow_runs) {
                    if (run.head_branch == "${{ steps.vars.outputs.short_ref }}" && run.head_sha != "${GITHUB_SHA}") {
                      runs_to_delete.push([run.id, run.name]);
                    }
                  }
                }
              }
            }

            for (const run of runs_to_delete) {
              console.log(`Run id ${run[0]} of '${run[1]}' is older than ${days_to_expiration} days. Deleting...`);
              try {
                await github.actions.deleteWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: run[0]
                });
              } catch (error) {
                // ignore errors
              }
            }
